openapi: 3.0.3
info:
  title: JuggerTube
  description: |-
    This is a platform to reference and search videos in which the sport Jugger is a main topic. For example videos of matches, reports, podcasts or music related to Jugger.
    It is possible to filter the videos according to the teams showed in the video, the tournament the game takes place at and the period of time the video takes place in.
    
    useful links:
    - https://www.jugger.org/portal
  contact:
    email: apiteam@swagger.io
  version: 1.0.0

paths:
  /api/teams:
    get:
      tags:
        - team
      summary: Finds all Teams 
      description: Returns all Teams registered on the platform
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
  /api/teams/add:
    post:
      tags:
        - team
      summary: Adds a new team
      description: ''
      parameters:
        - name: name
          in: query
          description: Name of new Team
          required: true
          schema:
            type: string
        - name: country
          in: query
          description: Country new Team is located in
          required: true
          schema:
            type: string
        - name: city
          in: query
          description: City of new Team is located in
          required: true
          schema:
            type: string
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/teams/edit/{teamId}:
    post:
      tags:
        - team
      summary: Edits an existing Team
      description: ''
      parameters:
        - name: teamId
          in: path
          description: ID of Team to update
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of Team
          required: true
          schema:
            type: string
        - name: country
          in: query
          description: Country Team is located in
          required: true
          schema:
            type: string
        - name: city
          in: query
          description: City of Team is located in
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: team not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/teams/delete/{teamId}:
    get:
      tags:
        - team
      summary: Delets an existing Team
      description: ''
      parameters:
        - name: teamId
          in: path
          description: ID of Team to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: team not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/tournaments:
    get:
      tags:
        - tournament
      summary: Finds all Tournaments 
      description: Returns all Tournaments registered on the platform
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tournament'
  /api/tournaments/add:
    post:
      tags:
        - tournament
      summary: Adds a new tournament
      description: ''
      parameters:
        - name: name
          in: query
          description: Name of new Tournament
          required: true
          schema:
            type: string
        - name: city
          in: query
          description: City where new Tournament takes place
          required: true
          schema:
            type: string
        - name: jtrLink
          in: query
          description: Link to JTR-Entry of Tournament (optional)
          required: false
          schema:
            type: string
        - name: tugenyLink
          in: query
          description: Link to Tugeny-Entry of Tournament
          required: false
          schema:
            type: string
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/tournaments/edit/{tournamentId}:
    post:
      tags:
        - tournament
      summary: Edits an existing Tournament
      description: ''
      parameters:
        - name: tournamentId
          in: path
          description: ID of Tournament to update
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of Tournament
          required: true
          schema:
            type: string
        - name: city
          in: query
          description: City of Tournament
          required: true
          schema:
            type: string
        - name: jtrLink
          in: query
          description: Link to JTR-Entry of Tournament
          required: false
          schema:
            type: string
        - name: tugenyLink
          in: query
          description: Link to Tugeny-Entry of Tournament
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: tournament not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/tournaments/delete/{tournamentId}:
    get:
      tags:
        - tournament
      summary: Delets an existing Tournament
      description: ''
      parameters:
        - name: tournamentId
          in: path
          description: ID of Tournament to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: tournament not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/channels:
    get:
      tags:
        - channel
      summary: Finds all Channels 
      description: Returns all Channels registered on the platform
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
  /api/channels/add:
    post:
      tags:
        - channel
      summary: Adds a new Channel
      description: ''
      parameters:
        - name: name
          in: query
          description: Name of new Channel
          required: true
          schema:
            type: string
        - name: link
          in: query
          description: Link to Channel Overview
          required: true
          schema:
            type: string
        - name: owner
          in: query
          description: ID of Channel Owner
          required: false
          schema:
            type: integer
            example: 1
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/channels/edit/{channelId}:
    post:
      tags:
        - channel
      summary: Edits an existing Channel
      description: ''
      parameters:
        - name: channelId
          in: path
          description: ID of Channel to update
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of Channel
          required: true
          schema:
            type: string
        - name: link
          in: query
          description: Link to Channel Overview
          schema:
            type: string
        - name: owner
          in: query
          description: ID of Channel Owner
          required: false
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: channel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/channels/delete/{channelId}:
    get:
      tags:
        - channel
      summary: Delets an existing Channel
      description: ''
      parameters:
        - name: channelId
          in: path
          description: ID of Channel to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: channel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/videos:
      get:
        tags:
          - video
        summary: Finds all Videos 
        description: Returns all Videos registered on the platform
        responses:
          default:
            description: Unexpected error
            content:
              application/json:
                $ref: '#/components/schemas/ApiResponse'
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Video'
  /api/videos/team/{teamId}:
      get:
        tags:
          - video
        summary: Finds all Videos from Team
        description: Returns all Videos where Team with given Team ID plays
        parameters:
          - name: teamId
            in: path
            description: ID of Team
            required: true
            schema:
              type: integer
              format: int64
        responses:
          default:
            description: Unexpected error
            content:
              application/json:
                $ref: '#/components/schemas/ApiResponse'
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Video'
  /api/videos/tournament/{tournamentId}:
    get:
      tags:
        - video
      summary: Finds all Videos from Tournament
      description: Returns all Videos from Tournament
      parameters:
        - name: tournamentId
          in: path
          description: ID of Tournament
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
  /api/videos/tournament/{tournamentId}/team/{teamId}:
    get:
      tags:
        - video
      summary: Finds all Videos from Team and Tournament
      description: Returns all Videos where Team with given Team ID plays on Tournament with given ID
      parameters:
        - name: teamId
          in: path
          description: ID of Team
          required: true
          schema:
            type: integer
            format: int64
        - name: tournamentId
          in: path
          description: ID of Tournament
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
  /api/videos/period/{beginning}/{ending}:
    get:
      tags:
        - video
      summary: Finds all Videos between beginning and ending date
      description: Returns all Videos where datOfRecording is between beginning date and ending date
      parameters:
        - name: beginning
          in: path
          description: beginning date
          required: true
          schema:
            type: string
        - name: ending
          in: path
          description: ending date
          required: true
          schema:
            type: string
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
  /api/videos/add:
    post:
      tags:
        - video
      summary: Adds a new Video
      description: ''
      parameters:
        - name: name
          in: query
          description: Name of new Video
          required: true
          schema:
            type: string
        - name: channel_id
          in: query
          description: Id of Channel Video was uploaded of
          required: true
          schema:
            type: integer
            format: int64
        - name: category
          in: query
          description: Type of the Video
          required: true
          schema:
            $ref: '#/components/schemas/VideoType'
        - name: link
          in: query
          description: Link to Video
          required: true
          schema:
            type: string
        - name: upload_date
          in: query
          description: Date Video was uploaded, format has to be like YYYY-mm-dd'T'hh-mm-ss
          required: true
          schema:
            type: string
        - name: comments
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: tournament_id
          in: query
          description: ID of Tournament where video took place
          required: false
          schema:
            type: integer
            format: int64
        - name: team_one_id
          in: query
          description: ID of first Team shown in the video
          required: false
          schema:
            type: integer
            format: int64
        - name: team_two_id
          in: query
          description: ID of second Team shown in the video
          required: false
          schema:
            type: integer
            format: int64
        - name: date_of_recording
          in: query
          description: Date Video was recorded, format has to be like YYYY-mm-dd'T'hh-mm-ss
          required: false
          schema:
            type: string
        - name: game_system
          in: query
          description: Game System of the Match
          required: false
          schema:
            $ref: '#/components/schemas/GameSystem'
        - name: weapon_type
          in: query
          description: type of weapon mentioned in the video
          required: false
          schema:
            type: string
        - name: topic
          in: query
          description: topic of the video
          required: false
          schema:
            type: string
        - name: guests
          in: query
          description: guests in the video
          required: false
          schema:
            type: string
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/videos/edit/{video_id}:
    post:
      tags:
        - video
      summary: Edits an existing video
      description: ''
      parameters:
        - name: video_id
          in: path
          description: Id of Video to edit
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of new Video
          required: true
          schema:
            type: string
        - name: channel_id
          in: query
          description: Id of Channel Video was uploaded of
          required: true
          schema:
            type: integer
            format: int64
        - name: category
          in: query
          description: Type of the Video
          required: true
          schema:
            $ref: '#/components/schemas/VideoType'
        - name: link
          in: query
          description: Link to Video
          required: true
          schema:
            type: string
        - name: upload_date
          in: query
          description: Date Video was uploaded, format has to be like YYYY-mm-dd'T'hh-mm-ss
          required: true
          schema:
            type: string
        - name: comments
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: tournament_id
          in: query
          description: ID of Tournament where video took place
          required: false
          schema:
            type: integer
            format: int64
        - name: team_one_id
          in: query
          description: ID of first Team shown in the video
          required: false
          schema:
            type: integer
            format: int64
        - name: team_two_id
          in: query
          description: ID of second Team shown in the video
          required: false
          schema:
            type: integer
            format: int64
        - name: date_of_recording
          in: query
          description: Date Video was recorded, format has to be like YYYY-mm-dd'T'hh-mm-ss
          required: false
          schema:
            type: string
        - name: game_system
          in: query
          description: Game System of Match
          required: false
          schema:
            type: string
            $ref: '#/components/schemas/GameSystem'
        - name: weapon_type
          in: query
          description: type of weapon mentioned in the video
          required: false
          schema:
            type: string
        - name: topic
          in: query
          description: topic of the video
          required: false
          schema:
            type: string
        - name: guests
          in: query
          description: guests in the video
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/videos/delete/{videoId}:
    get:
      tags:
        - video
      summary: Delets an existing Video
      description: ''
      parameters:
        - name: videoId
          in: path
          description: ID of Video to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        default:
          description: Unexpected error
          content:
            application/json:
              $ref: '#/components/schemas/ApiResponse'
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'


components:
  schemas:
    Team:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Cranium Ex Machina
        country:
          type: string
          example: Germany
        city:
          type: string
          example: Hamburg
    Tournament:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: 5. (Offizieller) Lahnveilchen Cup
        jtrLink:
          type: string
          example: https://turniere.jugger.org/tournament.php?id=724
        tugenyLink:
          type: string
          example: https://tugeny.org/tournaments/6-offizieller-lahnveilchencup/all-teams
    Channel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: WatchJUGGER
        link:
          type: string
          example: https://www.youtube.com/@WatchJUGGER
    Video:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Cranium Ex Machina vs NSA auf dem Kieler Nordderby
        channelId:
          type: integer
          format: int64
          example: 2
        category:
          $ref: '#/components/schemas/VideoType'
        link:
          type: string
          example: https://www.youtube.com/watch?v=IdcP2CiosyI&t=480s
        uploadDate:
          type: string
          example: 2015-05-06T22:00:00
        comments:
          type: string
          example: 'Only first half of the Game'
        tournamentId:
          type: integer
          format: int64
          example: 2
        teamOneId:
          type: integer
          format: int64
          example: 2
        teamTwoId:
          type: integer
          format: int64
          example: 3
        dateOfRecording:
          type: string
          example: 2015-05-06T22:00:00
        gameSystem:
          $ref: '#/components/schemas/GameSystem'
        weaponType:
          type: string
          example: Chain
        topic:
          type: string
          example: How to plain against Q-Tip without wrapping the Chain
        guests:
          type: string
          example: Uhu
    VideoType:
      type: string
      enum: 
        - REPORTS
        - HIGHLIGHTS
        - SPARBUILDING
        - MATCH
        - SONG
        - OTHER
        - PODCAST
        - AWARDS
        - TRAINING
    GameSystem:
      type: string
      enum:
        - NRW
        - SETS
        - STONES

    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header

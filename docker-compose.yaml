services:

  mysql:
    image: mysql:8.0.35
    restart: always
    environment:
      MYSQL_DATABASE: 'juggertube'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    volumes:
      - mysql_db_data:/var/lib/mysql
    networks:
      - backend_network

  redis:
    image: redis:latest
    networks:
      - backend_network

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: mypass
    ports:
      - "15672:15672"
    networks:
      - backend_network

  backend:
    build:
      context: ./
      dockerfile: docker/development/backend.Dockerfile
    container_name: backend
    environment:
      FLASK_ENV: 'production'
      CACHE_REDIS_HOST: 'redis'
      CACHE_REDIS_PORT: '6379'
      CELERY_BROKER_NAME: 'worker'
      CELERY_BACKEND_URL: 'amqp://admin:mypass@rabbitmq:5672'
      CELERY_RESULT_BACKEND: 'rpc://'
      DATABASE_URL: 'mysql+pymysql://user:password@mysql/juggertube'
      SECRET_KEY: 'secret'
      GENERATE_TEST_DATA: True
    volumes:
      - ./backend:/app
      - ./docker/development/assets:/app/DataDomain/assets
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
      - rabbitmq
    networks:
      - backend_network

 # frontend:
 #   build:
 #     context: ./
 #     dockerfile: docker/development/frontend.Dockerfile
 #   volumes:
 #     - docker/development/assets:/usr/share/nginx/html/assets
 #   ports:
 #     - "80:80"
 #     - "443:443"
 #   networks:
 #     - backend_network

networks:
  backend_network:
    driver: bridge

volumes:
  mysql_db_data: { }

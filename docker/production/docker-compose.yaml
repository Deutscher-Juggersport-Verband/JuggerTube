services:

  mysql:
    image: mysql:8.0.35
    container_name: juggertube-mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'juggertube'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    volumes:
      - mysql_db_data:/var/lib/mysql
    networks:
      - backend_network

  redis:
    image: redis:latest
    container_name: juggertube-redis
    networks:
      - backend_network

  cron:
    build:
      context: ../../
      dockerfile: docker/production/cron.Dockerfile
    container_name: juggertube-cron
    environment:
      BASE_URL: 'juggertube-backend:8080'
      TELEGRAM_BOT_TOKEN: 'example123'
    networks:
      - backend_network

  backend:
    build:
      context: ../../
      dockerfile: docker/production/backend.Dockerfile
    container_name: juggertube-backend
    environment:
      FLASK_ENV: 'production'
      CACHE_REDIS_HOST: 'redis'
      CACHE_REDIS_PORT: '6379'
      DATABASE_URL: 'mysql+pymysql://user:password@mysql/juggertube'
      SECRET_KEY: 'secret'
      GENERATE_TEST_DATA: 'True'
    volumes:
      - certs:/etc/letsencrypt
      - ./assets:/app/DataDomain/assets
    depends_on:
      - mysql
      - redis
    networks:
      - backend_network

  frontend:
    build:
      context: ../../
      dockerfile: docker/production/frontend.Dockerfile
    container_name: juggertube-frontend
    volumes:
      - certs:/etc/letsencrypt
      - ./assets:/usr/share/nginx/html/assets
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend_network

networks:
  backend_network:
    driver: bridge

volumes:
  mysql_db_data: {}
  certs:
    driver: local
    driver_opts:
      type: none
      device: ./nginx/cert
      o: bind
